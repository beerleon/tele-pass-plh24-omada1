
CREATE SCHEMA AVENUE;

DROP TABLE ROLE_PERMISSION;
DROP TABLE "MODULE";
DROP TABLE APP_USER;
DROP TABLE PROGRAM_RATE;
DROP TABLE STATION;
DROP TABLE USER_ROLE;

DROP TABLE VEHICLE;
DROP TABLE VEHICLE_CATEGORY;
DROP TABLE PAYMENT;
DROP TABLE COLLECTION;
DROP TABLE CARD;

DROP TABLE CUSTOMER;
DROP TABLE PROGRAM;

CREATE TABLE STATION
(
ID INT not null primary key
GENERATED ALWAYS AS IDENTITY
(START WITH 1, INCREMENT BY 1),  
DESCRIPTION VARCHAR(50), 
DISTANCE INT,     
PHONE VARCHAR(50)
);

CREATE TABLE "USER_ROLE"
(
ID INT not null primary key
GENERATED ALWAYS AS IDENTITY
(START WITH 1, INCREMENT BY 1),   
ROLE_NAME VARCHAR(20)

);

CREATE TABLE "APP_USER" (
    ID INT not null primary key
    GENERATED ALWAYS AS IDENTITY
    (START WITH 1, INCREMENT BY 1),  
    STATION_ID INT, 
    ROLE_ID INT,
    F_NAME VARCHAR(50),     
    L_NAME VARCHAR(50),
    ADDRESS VARCHAR(100),
    ZIP_CODE INT,  
    CITY VARCHAR(50),  
    PHONE VARCHAR(50),
    EMAIL VARCHAR(100),
    ADT VARCHAR(20),
    AFM INT,
    USER_NAME VARCHAR(20),
    PASSWORD VARCHAR(20)
);

ALTER TABLE APP_USER ADD CONSTRAINT STATION_FK
Foreign Key (STATION_ID) REFERENCES STATION (ID);
ALTER TABLE APP_USER ADD CONSTRAINT ROLE_FK
Foreign Key (ROLE_ID) REFERENCES USER_ROLE(ID);



CREATE TABLE MODULE
(
ID INT not null primary key,   
DESCRIPTION VARCHAR(30) NOT NULL

);




CREATE TABLE "ROLE_PERMISSION"
(
ID INT not null primary key
GENERATED ALWAYS AS IDENTITY
(START WITH 1, INCREMENT BY 1),   
ROLE_ID INT, 
MODULE_ID INT NOT NULL,
STATION_LEVEL_ACCESS BOOLEAN DEFAULT TRUE,
CAN_CREATE BOOLEAN DEFAULT TRUE,
CAN_RETRIEVE BOOLEAN DEFAULT TRUE,
CAN_UPDATE BOOLEAN DEFAULT TRUE,
CAN_DELETE BOOLEAN DEFAULT TRUE

);
ALTER TABLE ROLE_PERMISSION ADD CONSTRAINT CUST_FK
Foreign Key (ROLE_ID) REFERENCES USER_ROLE(ID);
ALTER TABLE ROLE_PERMISSION ADD CONSTRAINT PERM_FK
Foreign Key (MODULE_ID) REFERENCES MODULE (ID);




CREATE TABLE "CUSTOMER"
(
"ID" INT not null primary key
GENERATED ALWAYS AS IDENTITY
(START WITH 1, INCREMENT BY 1),   
"F_NAME" VARCHAR(50),     
"L_NAME" VARCHAR(50),
"ADDRESS" VARCHAR(100),
"ZIP_CODE" INT,  
"CITY" VARCHAR(50),  
"PHONE" VARCHAR(50),
"EMAIL" VARCHAR(100),
"ADT" VARCHAR(20),
"AFM" INT

);

CREATE TABLE "VEHICLE_CATEGORY"
(
"ID" INT not null primary key
GENERATED ALWAYS AS IDENTITY
(START WITH 1, INCREMENT BY 1),   
"DESCRIPTION" VARCHAR(50)
);


CREATE TABLE "CARD"
(
"ID" INT not null primary key
GENERATED ALWAYS AS IDENTITY
(START WITH 1, INCREMENT BY 1),   
BARCODE INT,
BALANCE DOUBLE   

);


CREATE TABLE "VEHICLE"
(
"ID" INT not null primary key
GENERATED ALWAYS AS IDENTITY
(START WITH 1, INCREMENT BY 1),   
"CUST_ID" INT,     
"REG_NUMBER" VARCHAR(50),
"COLOUR" VARCHAR(50),
"FACTORY_NAME" VARCHAR(50), 
"MODEL_TYPE" VARCHAR(50),  
"CATEGORY_ID" INT,
"CARD_ID" INT
);

ALTER TABLE VEHICLE ADD CONSTRAINT CLIENT_FK
Foreign Key (CUST_ID) REFERENCES CUSTOMER (ID);
ALTER TABLE VEHICLE ADD CONSTRAINT CATEGORY_FK
Foreign Key (CATEGORY_ID) REFERENCES VEHICLE_CATEGORY (ID);
ALTER TABLE VEHICLE ADD CONSTRAINT CARD_FK
Foreign Key (CARD_ID) REFERENCES CARD (ID);



CREATE TABLE "COLLECTION"
(
"ID" INT not null primary key
GENERATED ALWAYS AS IDENTITY
(START WITH 1, INCREMENT BY 1),   
"CARD_ID" INT,     
PASS_TIMESTAMP DATE NOT NULL,
TOLL_COLLECTED NUMERIC(5,2)
);
ALTER TABLE COLLECTION ADD CONSTRAINT COLLECTION_CARD_FK
Foreign Key (CARD_ID) REFERENCES CARD (ID);

CREATE TABLE "PAYMENT"
(
"ID" INT not null primary key
GENERATED ALWAYS AS IDENTITY
(START WITH 1, INCREMENT BY 1),   
"CARD_ID" INT,     
PAYMENT_TIMESTAMP DATE NOT NULL,
OLD_BALANCE NUMERIC(5,2)
);
ALTER TABLE PAYMENT ADD CONSTRAINT PAYMENT_CARD_FK
Foreign Key (CARD_ID) REFERENCES CARD (ID);


CREATE TABLE "PROGRAM"
(
"ID" INT not null primary key
GENERATED ALWAYS AS IDENTITY
(START WITH 1, INCREMENT BY 1),   
NAME VARCHAR(20),
DESCRIPTION VARCHAR(50)
);


CREATE TABLE PROGRAM_RATE
(
"ID" INT not null primary key
GENERATED ALWAYS AS IDENTITY
(START WITH 1, INCREMENT BY 1),
PROGRAM_ID INT,   
STATION_ID INT,
CATEGORY_ID INT,    
RATE NUMERIC(5,2)
);
ALTER TABLE PROGRAM_RATE ADD CONSTRAINT PROGRAM_FK
Foreign Key (PROGRAM_ID) REFERENCES PROGRAM(ID);
ALTER TABLE PROGRAM_RATE ADD CONSTRAINT PROGRAM_RATE_STATION_FK
Foreign Key (STATION_ID) REFERENCES STATION(ID);
ALTER TABLE PROGRAM_RATE ADD CONSTRAINT PROGRAM_RATE_CATEGORY_FK
Foreign Key (CATEGORY_ID) REFERENCES VEHICLE_CATEGORY (ID);



---




INSERT INTO STATION (DESCRIPTION, DISTANCE, PHONE) 
	VALUES ('йяуомеяи', NULL, NULL);
INSERT INTO STATION (DESCRIPTION, DISTANCE, PHONE) 
	VALUES ('хгба', NULL, NULL);
INSERT INTO STATION (DESCRIPTION, DISTANCE, PHONE) 
	VALUES ('тяацама', NULL, NULL);
INSERT INTO STATION (DESCRIPTION, DISTANCE, PHONE) 
	VALUES ('пекасциа', NULL, NULL);
INSERT INTO STATION (DESCRIPTION, DISTANCE, PHONE) 
	VALUES ('хеялопукес', NULL, NULL);
INSERT INTO STATION (DESCRIPTION, DISTANCE, PHONE) 
	VALUES ('лосвовыяи', NULL, NULL);
INSERT INTO STATION (DESCRIPTION, DISTANCE, PHONE) 
	VALUES ('лайяувыяи', NULL, NULL);
INSERT INTO STATION (DESCRIPTION, DISTANCE, PHONE) 
	VALUES ('пуяцетос', NULL, NULL);
INSERT INTO STATION (DESCRIPTION, DISTANCE, PHONE) 
	VALUES ('кептойаяуа', NULL, NULL);
INSERT INTO STATION (DESCRIPTION, DISTANCE, PHONE) 
	VALUES ('лакцаяа', NULL, NULL);


INSERT INTO USER_ROLE (ROLE_NAME) 
	VALUES ('диавеияистгс');
INSERT INTO USER_ROLE (ROLE_NAME) 
	VALUES ('стахлаявгс');
INSERT INTO USER_ROLE (ROLE_NAME) 
	VALUES ('еиспяайтыя');

INSERT INTO APP_USER (STATION_ID, ROLE_ID, F_NAME, L_NAME, ADDRESS, ZIP_CODE, CITY, PHONE, EMAIL, ADT, AFM, USER_NAME, PASSWORD) 
	VALUES (1, 1, 'аццекос', 'хамос', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'admin', 'admin');


INSERT INTO MODULE (ID, DESCRIPTION) 
	VALUES (1,'диавеияисг вягстым');
INSERT INTO MODULE (ID, DESCRIPTION) 
	VALUES (2,'диавеияисг пекатым');
INSERT INTO MODULE (ID, DESCRIPTION) 
	VALUES (3,'диавеияисг пяоцяаллатым');
INSERT INTO MODULE (ID, DESCRIPTION) 
	VALUES (4,'еиспяанг диодиым');
INSERT INTO MODULE (ID, DESCRIPTION) 
	VALUES (5,'жоятисг йаятас');
INSERT INTO MODULE (ID, DESCRIPTION) 
	VALUES (6,'йимгсеис');

